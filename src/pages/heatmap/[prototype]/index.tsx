import React, { useEffect, useState } from 'react'
import Examplesite from '../../../components/prototypes/d1/Examplesite'


const AllUserHeatmap = () => {
  const recordWindow = {
    width: 1221,
    height: 400
  }
  const [width, setWidth] = useState(0)
  const [height, setHeight] = useState(0)
  
   

  useEffect(() => {
  
    setWidth(window?.outerWidth)
    setHeight(window?.outerHeight)
    const coordsarray = [[227,231],[224,231],[220,230],[216,229],[213,228],[208,227],[203,225],[199,223],[194,222],[185,220],[178,217],[170,216],[163,215],[156,213],[151,212],[147,211],[145,210],[141,208],[138,206],[137,205],[135,203],[134,201],[133,198],[133,196],[132,194],[132,191],[131,189],[131,187],[130,185],[130,183],[130,182],[129,180],[129,180],[128,179],[128,178],[128,178],[128,177],[128,177],[128,177],[128,177],[128,177],[129,177],[129,178],[129,179],[129,179],[129,180],[129,180],[129,180],[129,180],[129,178],[128,176],[128,173],[127,169],[127,164],[126,159],[126,153],[125,147],[125,140],[125,134],[125,131],[125,127],[125,122],[125,119],[125,118],[125,116],[126,115],[126,114],[127,113],[127,113],[128,112],[129,111],[130,111],[131,110],[132,109],[134,107],[136,104],[139,102],[142,100],[145,97],[149,95],[152,92],[156,90],[158,88],[161,86],[163,84],[166,82],[168,80],[169,79],[171,77],[172,75],[173,73],[174,72],[175,71],[175,71],[175,70],[175,70],[176,69],[176,69],[176,69],[177,69],[178,70],[180,72],[184,77],[188,83],[198,95],[206,110],[216,127],[229,149],[237,160],[248,178],[254,185],[264,198],[268,201],[275,208],[280,212],[279,213],[278,215],[276,217],[273,220],[271,222],[269,225],[267,228],[265,230],[263,232],[261,234],[259,237],[258,238],[257,240],[256,240],[255,240],[253,242],[249,244],[247,246],[244,248],[240,251],[238,254],[232,257],[226,261],[222,265],[216,268],[212,271],[207,274],[203,277],[201,278],[196,282],[193,284],[191,285],[189,287],[186,289],[185,291],[184,292],[183,293],[182,294],[182,294],[182,294],[182,294],[184,293],[188,290],[192,287],[198,284],[203,281],[208,279],[214,276],[219,274],[220,274],[224,273],[226,273],[229,273],[230,273],[231,273],[231,273],[232,275],[232,276],[232,277],[232,279],[230,280],[228,281],[225,282],[221,283],[217,284],[213,285],[208,286],[205,287],[202,288],[199,288],[196,288],[195,289],[194,289],[194,289],[196,288],[199,287],[203,285],[207,284],[211,282],[216,281],[221,280],[220,280],[215,280],[210,280],[204,280],[198,280],[191,280],[183,280],[176,281],[168,281],[162,281],[150,282],[140,282],[137,282],[131,282],[127,282],[125,282],[123,282],[123,280],[126,279],[130,276],[134,274],[139,272],[145,270],[150,268],[156,266],[159,266],[162,266],[166,266],[169,266],[171,266],[173,267],[174,269],[175,270],[175,272],[175,274],[175,276],[175,278],[173,280],[170,281],[168,282],[166,283],[164,284],[159,285],[158,285],[158,285],[161,283],[167,279],[174,275],[184,272],[193,268],[198,266],[206,263],[214,261],[218,260],[223,260],[226,260],[229,260],[231,260],[231,260],[231,261],[231,263],[228,265],[225,268],[219,270],[214,272],[208,273],[206,274],[202,275],[199,276],[197,276],[196,276],[196,276],[198,274],[201,272],[207,270],[212,268],[217,266],[219,265],[223,264],[226,264],[229,264],[230,264],[231,264],[232,266],[232,268],[232,270],[231,272],[229,274],[226,276],[222,278],[217,279],[211,281],[208,281],[204,282],[200,282],[197,282],[195,282],[193,282],[193,281],[192,279],[192,278],[194,278],[195,277],[198,276],[200,275],[201,275],[202,275],[203,275],[203,275],[202,275],[199,276],[195,278],[190,279],[180,281],[170,283],[165,284],[150,286],[138,287],[127,288],[121,288],[112,289],[109,289],[103,289],[99,289],[96,289]]
    const adjustedCoordsarray = coordsarray.map((coordinates) => {
      if (coordinates[0] && coordinates[1]) {
        const x = coordinates[0] * window?.innerWidth / recordWindow.width;
        const y = coordinates[1] * window?.outerHeight / recordWindow.height;
        return [x, y]
      }
    })

    const occurrences = adjustedCoordsarray.reduce(function (acc: any, curr: any) {
      console.log(acc) 
      console.log(curr)
      return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc
    }, {});

    const occurrencesArrays: any = [];
    for (const coordinate in occurrences) {
      const coordarr: string[] = coordinate.split(',');
      occurrencesArrays.push([coordarr, occurrences[coordinate]])
    } 
  
    const c = document.getElementById("myCanvas") as HTMLCanvasElement;
    const ctx: any = c.getContext("2d");
    
    for (let i = 0; i < occurrencesArrays.length; i++) {
      if (occurrencesArrays[i][1] > 1 ) {
        ctx.fillStyle = "red";
        ctx.shadowBlur = 5;
        ctx.fillRect(occurrencesArrays[i][0][0], occurrencesArrays[i][0][1], 1, 1);
      } else {
        ctx.fillStyle = "green";
        ctx.shadowBlur = 5;
        ctx.fillRect(occurrencesArrays[i][0][0], occurrencesArrays[i][0][1], 1, 1);
      }  
    }
  })
     

  return (
    <div className="flex relative ">
      <canvas id="myCanvas" width={width} height={height} className="absolute z-10"></canvas>
      <Examplesite/>
    </div>
  )
}

export default AllUserHeatmap